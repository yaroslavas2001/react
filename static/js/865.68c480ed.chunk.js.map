{"version":3,"file":"static/js/865.68c480ed.chunk.js","mappings":"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","sources":["redux/users-selectors.ts","webpack://react/./src/common/Paginator/Paginator.module.css?abf7","common/Paginator/Paginator.tsx","webpack://react/./src/component/pages/users/user/User.module.css?44b6","component/pages/users/user/User.tsx","component/pages/users/Users.tsx","component/pages/users/UsersContainer.tsx"],"sourcesContent":["import { createSelector } from \"reselect\"\nimport { AppReducerType } from \"./redux-store\"\nconst getUsersSelector = (state: AppReducerType) => {\n  return state.userPage.users\n}\n// export const getUsers = createSelector(getUsersSelector, getIsFetching, (users, isFetching) => {\n//   return users.filter(u => true)\n// })\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n  // return users.filter(u => true)\n  return users\n})\n// export const getPageSize = (state: AppReducerType) => {\n//   return state.userPage.pagination.pageSize\n// }\nexport const getTotalUsersCount = (state: AppReducerType) => {\n  return state.userPage.pagination.totalUsersCount\n}\nexport const getCurrentPage = (state: AppReducerType) => {\n  return state.userPage.pagination.currentPage\n}\nexport const getIsFetching = (state: AppReducerType) => {\n  return state.userPage.isFetching\n}\nexport const getFollowingInProgress = (state: AppReducerType) => {\n  return state.userPage.followingInProgress\n}\nexport const getUsersPagination = (state: AppReducerType) => {\n  return state.userPage.pagination\n}\n// export const countSomethingDificult = (state) => {\n//  for... math... big arrays\n//   return  state.userPage.followingInProgress\n// }","// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__gM3jQ\",\"left\":\"Paginator_left__rhvEb\",\"right\":\"Paginator_right__rWKmS\",\"btn\":\"Paginator_btn__gzDth\",\"base\":\"Paginator_base__LkQA7\",\"item\":\"Paginator_item__tBzyy\",\"select\":\"Paginator_select__2RpOO\"};","import React, { FC, useState } from \"react\"\nimport style from \"./Paginator.module.css\"\nimport back from \"./../../assets/back.png\"\nimport forward from \"./../../assets/forward.png\"\nimport { useEffect } from \"react\";\nimport { join } from \"../../utils/function\";\n\ntype propsType = {\n  totalItemsCount: number\n  pageSize: number\n  currentPage: number\n  portionSize?: number\n  currentPortion: number\n  onPageCanged: (page: number) => void\n  setCurrentPortion: (portion: number) => void\n}\nconst Paginator: FC<propsType> = ({ totalItemsCount, pageSize, currentPage, currentPortion, onPageCanged, setCurrentPortion, portionSize = 10 }) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize)\n  // количество порций этих страничек\n  let portionCount = Math.ceil(pagesCount / portionSize)\n  // let [portionNumber, setPortionNumber] = useState<number>(currentPortion)\n\n  let isShowLeft = currentPortion !== 0\n  let isShowRight = portionCount !== currentPortion + 1\n  const changePortionPages = (): Array<number> => {\n    let test: Array<number> = []\n    for (let i = 1; i <= portionSize; i++) {\n      let pageNumber = i + (portionSize * currentPortion)\n      let passedItems = pageNumber * pageSize\n      let isAllShown = (passedItems - totalItemsCount) < pageSize\n      if (isAllShown) {\n        test.push(pageNumber)\n      }\n    }\n    return test\n  }\n  let [pages, changePortion] = useState<Array<number>>(changePortionPages())\n  useEffect(() => {\n    // выполняется после отрисовки\n    changePortion(changePortionPages())\n  }, [currentPortion])\n\n  const right = () => {\n    setCurrentPortion(currentPortion + 1)\n  }\n  const left = () => {\n    setCurrentPortion(currentPortion - 1)\n  }\n\n\n  const changePage = (page: number) => () => {\n    onPageCanged(page)\n  }\n  const toFinish = () => {\n    setCurrentPortion(portionCount - 1)\n    onPageCanged(pagesCount)\n  }\n  const toStart = () => {\n    setCurrentPortion(0)\n    onPageCanged(1)\n  }\n  const isCurrentPage = (curentPage: number, anyPage: number): string => {\n    return curentPage === anyPage ? style.select : style.item\n  }\n  return (<div className={style.paginator}>\n    {isShowLeft && <> <img src={back} alt=\"back\" className={style.btn} onClick={left} />\n      <div className={join([isCurrentPage(currentPage, 1),style.base, style.left])}\n        onClick={toStart}\n      > {1}</div>\n    </>\n    }\n    {pages.map(p =>\n      <div key={p}\n        className={join([isCurrentPage(currentPage, p),style.base])}\n        onClick={changePage(p)}\n      > {p}</div>\n    )}\n    {isShowRight && <>\n      <div className={join([isCurrentPage(currentPage, pagesCount), style.base,style.right])}\n        onClick={toFinish}\n      > {pagesCount}</div>\n      <img src={forward} alt=\"back\" className={style.btn} onClick={right} />\n\n    </>\n    }\n    {/* <input type=\"number\" onBlur={changePage()} val /> */}\n  </div>)\n}\n\nexport default Paginator;\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__fJW-S\",\"img_block\":\"User_img_block__4D4tr\",\"photo\":\"User_photo__2SBuo\",\"user_block\":\"User_user_block__29-lo\",\"user_information\":\"User_user_information__qk6s2\",\"user_name\":\"User_user_name__wuDNj\",\"user_status\":\"User_user_status__QqhAD\",\"btn_clock\":\"User_btn_clock__kUOgg\"};","import { NavLink } from \"react-router-dom\"\nimport style from \"./User.module.css\"\nimport imgDefault from \"./../../../../assets/default_user.png\"\nimport React, { FC } from 'react';\nimport { UsersType } from \"../../../../types/types\"\nimport BaseButton from \"../../../../common/Button/BaseButton\";\ntype propsType = {\n  user: UsersType\n  followingInProgress: Array<number>\n  isAuth: boolean\n  unFollow: (id: number) => void\n  follow: (id: number) => void\n}\nconst User: FC<propsType> = ({ user, unFollow, follow, isAuth, followingInProgress, ...props }) => {\n  const photo = user.photos.large ? user.photos.large : imgDefault\n  const unfollowUser = (id: number) => {\n    return () => { unFollow(id) }\n  }\n  const followUser = (id: number) => {\n    return () => { follow(id) }\n  }\n  const disabled = () => {\n    // Добавить обработку на не залогиневшихся полльзователей\n    return followingInProgress.some((id: number) => id === user.id)\n  }\n\n  return (\n    <div className={style.user}>\n      <NavLink to={`/profile/` + user.id} className={style.img_block}>\n        <img className={style.photo} src={photo} alt=\"photo_user\" />\n      </NavLink>\n      <div className={style.user_block}>\n        <div className={style.user_information}>\n          <NavLink to={`/profile/` + user.id} className={style.user_name}>\n            <div >{user.name}</div>\n          </NavLink>\n          <div className={style.user_status}>{user.status}</div>\n        </div>\n        <div className={style.btn_clock}>\n          {\n            isAuth ? <>\n              {user.followed ?\n                <BaseButton isDisabled={disabled()} isMutedStyle={true}\n                  value=\"UnFollow\" onClick={unfollowUser(user.id)} />\n                :\n                <BaseButton isDisabled={disabled()}\n                  value=\"Follow\" onClick={followUser(user.id)} />}\n\n            </> :\n              <NavLink to={`/profile/` + user.id}>\n                <BaseButton value=\"Show profile\" onClick={() => { }} />\n              </NavLink>\n          }\n        </div>\n      </div>\n    </div>)\n}\n\nexport default User;\n","import { FC } from \"react\"\nimport Paginator from \"../../../common/Paginator/Paginator\";\nimport { UsersType } from \"../../../types/types\";\nimport User from \"./user/User\";\nimport React from \"react\"\nimport style from \"./../../../App.module.css\"\nimport { PaginationType } from \"../../../redux/users-reducer\";\nimport { Formik } from \"formik\";\nimport { Form } from \"formik\";\nimport { Field } from \"formik\";\n\ntype propsType = {\n  pagination: PaginationType\n  isAuth: boolean\n  users: Array<UsersType>\n  followingInProgress: Array<number>\n  follow: (id: number) => void\n  unFollow: (id: number) => void\n  onPageCanged: (page: number, term: string) => void\n  setCurrentPortion: (portion: number) => void\n\n}\nconst Users: FC<propsType> = ({ followingInProgress, users, follow, setCurrentPortion, unFollow, onPageCanged, ...props }) => {\n  const onPageCanged2 = (page: number) => {\n    onPageCanged(page, '')\n  }\n  return (\n    <div className={style.content}>\n      <Paginator currentPage={props.pagination.currentPage}\n        totalItemsCount={props.pagination.totalUsersCount}\n        pageSize={props.pagination.pageSize}\n        currentPortion={props.pagination.currentPortion}\n        onPageCanged={onPageCanged2}\n        setCurrentPortion={setCurrentPortion}\n        portionSize={10}\n      />\n      {/* <UserSearchForm></UserSearchForm> */}\n      {\n        users.map(user =>\n          <User user={user}\n            unFollow={unFollow}\n            follow={follow}\n            followingInProgress={followingInProgress}\n            key={user.id}\n            isAuth={props.isAuth}\n          />\n        )\n      }\n    </div>);\n}\nconst UserSearchForm = () => {\n  const onSubmit = () => {\n    // async (values: any) => {\n    //   await new Promise((resolve) => setTimeout(resolve, 500));\n    //   alert(JSON.stringify(values, null, 2));\n    // }\n  }\n  return (\n    <Formik\n      initialValues={{ term: \"\" }}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <Field name=\"term\" type=\"text\" />\n        <button type=\"submit\">Find</button>\n      </Form>\n    </Formik>\n  )\n}\nexport default Users;\n","import { connect } from \"react-redux\"\nimport {\n  follow,\n  unFollow,\n  getUsersThunkCreator,\n  PaginationType, setCurrentPortion,\n} from \"../../../redux/users-reducer\"\nimport React from \"react\"\nimport Preloader from \"../../../common/Preloader/Preloader\"\nimport {\n  getFollowingInProgress, getIsFetching,\n  getUsers, getUsersPagination\n} from \"../../../redux/users-selectors\"\nimport Users from \"./Users\"\nimport { UsersType } from \"../../../types/types\"\nimport { AppReducerType } from \"../../../redux/redux-store\"\ntype MapStateToPropsType = {\n  pagination: PaginationType\n  isFetching: boolean\n  users: Array<UsersType>\n  followingInProgress: Array<number>\n  isAuth: boolean\n}\ntype MapDispatchToPropsType = {\n  unFollow: (id: number) => void\n  follow: (id: number) => void\n  getUsers: (pageNumber: number, pageSize: number, term: string) => void\n  setCurrentPortion: (portion: number) => void\n}\ntype OwnPropsType = {\n  pageTitle: string\n}\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & OwnPropsType\nclass UsersContainer extends React.Component<PropsType> {\n  /*  если наш конструктор только и делает что делегирует конструирование\n     родительскому конструктору, то его писать не нужно\n    constructor(props){\n    super(props)\n    }\n    */\n  // constructor(props){\n  //   super(props)\n  // }\n  componentDidMount() {\n    this.props.getUsers(this.props.pagination.currentPage, this.props.pagination.pageSize, '')\n  }\n  onPageCanged = (pageNumber: number, term: string) => {\n    this.props.getUsers(pageNumber, this.props.pagination.pageSize, term)\n  }\n  render() {\n    if (this.props.isFetching)\n      return (<Preloader isFetching={this.props.isFetching} />)\n    return (\n      <Users pagination={this.props.pagination}\n        users={this.props.users}\n        onPageCanged={this.onPageCanged}\n        unFollow={this.props.unFollow}\n        follow={this.props.follow}\n        setCurrentPortion={this.props.setCurrentPortion}\n        followingInProgress={this.props.followingInProgress}\n        isAuth={this.props.isAuth}\n      />\n    )\n  }\n}\nlet mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\n  return {\n    pagination: getUsersPagination(state),\n    users: getUsers(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n    isAuth: state.auth.isAuth\n  }\n}\n//connect - state , dispatch , own , statef\nexport default connect<MapStateToPropsType, MapDispatchToPropsType>(mapStateToProps,\n  {\n    follow, unFollow,\n    getUsers: getUsersThunkCreator,\n    setCurrentPortion\n  }\n)(UsersContainer)\n// let mapDispatchToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId))\n//     },\n//     unFollow: (userId) => {\n//       dispatch(unFollowAC(userId))\n//     },\n//     setUsers: (users) => {\n//       dispatch(setUsersAC(users))\n//     },\n//     setCurrentPage: (currentPage) => {\n//       dispatch(setCurrentPageAC(currentPage))\n//     },\n//     setTotalUsersCount: (totalUsersCount) => {\n//       dispatch(setTotalUsersCountAC(totalUsersCount))\n//     },\n//     setIsFetching: (isFetching) => {\n//       dispatch(setIsFetchingAC(isFetching))\n//     }\n//   }\n// }\n//mapDispatchToProps - ссылки на вызовы\n// let mapStateToProps = (state) => {\n//   return {\n//     users: state.userPage.users,\n//     pageSize: state.userPage.pageSize,\n//     totalUsersCount: state.userPage.totalUsersCount,\n//     currentPage: state.userPage.currentPage,\n//     isFetching: state.userPage.isFetching,\n//     followingInProgress: state.userPage.followingInProgress\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)\n\n"],"names":["getUsers","createSelector","state","userPage","users","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersPagination","pagination","totalItemsCount","pageSize","currentPage","currentPortion","onPageCanged","setCurrentPortion","portionSize","pagesCount","Math","ceil","portionCount","isShowLeft","isShowRight","changePortionPages","test","i","pageNumber","push","useState","pages","changePortion","useEffect","isCurrentPage","curentPage","anyPage","style","className","src","alt","onClick","join","map","p","page","id","user","unFollow","follow","isAuth","photo","photos","large","imgDefault","disabled","some","to","name","status","followed","BaseButton","isDisabled","isMutedStyle","value","followUser","props","totalUsersCount","UsersContainer","term","this","Preloader","React","connect","auth","getUsersThunkCreator"],"sourceRoot":""}