{"version":3,"file":"static/js/111.8142df37.chunk.js","mappings":"qPAGIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE1B,E,oBCND,EAA0B,wB,UCA1B,GAAiB,ECUjB,EARmB,SAACE,GAClB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OACE,gBAAKC,UAAWC,EAAAA,OAAhB,UACE,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAG/B,ECTD,EAA0B,yBCQ1B,EAPgB,SAACN,GACf,OACE,gBAAKG,UAAWC,EAAhB,SACGJ,EAAMO,SAGZ,E,UCmBD,EApBe,SAACC,GACOA,EAAMC,QAAQC,KAAI,SAACC,EAASC,GAAV,OAA4B,SAAC,EAAD,CAAwBN,KAAMK,EAAGL,KAAMJ,GAAIS,EAAGT,IAA7BU,EAA7C,IACjBJ,EAAMK,SAASH,KAAI,SAACC,EAASC,GAAV,OAA4B,SAAC,EAAD,CAAqBL,QAASI,EAAGJ,QAASL,GAAIS,EAAGT,IAAnCU,EAA1C,IAIzC,OAAQ,gBAAKT,WAAWW,EAAAA,EAAAA,GAAK,CAACV,EAAeW,EAAAA,EAAAA,UAArC,4CAYT,EClBKC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAKH,OALGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACJ,WACE,OACE,SAAC,GAAD,UAAYC,KAAKT,OAEpB,OALGQ,CAAwBE,EAAAA,WAgB9B,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KARD,SAACvB,GACrB,MAAO,CACLY,QAASZ,EAAMwB,YAAYZ,QAC3BI,SAAUhB,EAAMwB,YAAYR,SAG/B,GAE+C,CAAES,YAAAA,EAAAA,KPflB,SAACC,GAAe,IACtCC,EADqC,0CAEvC,WAAYhB,GAAO,kCACTA,EAET,CALsC,qCAMvC,WACI,OAAKS,KAAKT,MAAMV,QACT,SAACyB,GAAD,UAAeN,KAAKT,SADI,SAAC,KAAD,CAAUH,GAAG,UAE/C,KATsC,GACXa,EAAAA,WAWhC,OADqCE,EAAAA,EAAAA,IAAQxB,EAARwB,CAAoCI,EAE5E,GOED,CAEER,E","sources":["hoc/withAuthRedirect.js","webpack://react/./src/component/pages/dialog/Dialog.module.css?01b5","component/pages/dialog/dialogItem/DialogItem.module.css","component/pages/dialog/dialogItem/DialogItem.tsx","webpack://react/./src/component/pages/dialog/message/Message.module.css?1c56","component/pages/dialog/message/Message.tsx","component/pages/dialog/Dialog.tsx","component/pages/dialog/DialogContainer.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        constructor(props){\r\n            super(props);\r\n            // console.log(\"test\",this.props.isAuth)\r\n        }\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__Q0mAz\",\"dialogs_items\":\"Dialog_dialogs_items__K2znJ\",\"messages\":\"Dialog_messages__dLWZd\",\"message\":\"Dialog_message__2z+71\",\"add_new_message_block\":\"Dialog_add_new_message_block__FYvJH\"};","// extracted by mini-css-extract-plugin\nexport default {};","import { NavLink } from \"react-router-dom\";\nimport style from \"./DialogItem.module.css\"\nimport React from \"react\"\nconst DialogItem = (probs:any) => {\n  let path = \"/dialog/\" + probs.id\n  return (\n    <div className={style.dialog}>\n      <NavLink to={path}>{probs.name}</NavLink>\n    </div>\n  );\n}\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__P4Ghh\"};","import style from \"./Message.module.css\"\nimport React from \"react\"\nconst Message = (probs: any) => {\n  return (\n    <div className={style.message}>\n      {probs.message}\n    </div>\n  );\n}\nexport default Message;\n","import React from \"react\";\nimport { join } from \"../../../utils/function\";\nimport style from \"./Dialog.module.css\"\nimport ReduxDialogForm from \"./dialogForm/DialogForm\";\nimport DialogItem from \"./dialogItem/DialogItem\";\nimport Message from \"./message/Message\";\nimport styleMain from \"./../../../App.module.css\"\nconst Dialog = (props: any) => {\n  let dialogsElement = props.dialogs.map((el: any, index: number) => <DialogItem key={index} name={el.name} id={el.id} />)\n  let messagesElement = props.messages.map((el: any, index: number) => <Message key={index} message={el.message} id={el.id} />)\n  const onSubmit = (formData: any) => {\n    props.sentMessage(formData.newMessageText)\n  }\n  return (<div className={join([style.dialogs, styleMain.content])}>\n    This block is under development\n    {/* <div className={style.dialogs_items}>\n      {dialogsElement}\n    </div>\n    <div className={style.messages}>\n      <div className={style.message}>\n        {messagesElement}\n      </div>\n      <ReduxDialogForm onSubmit={onSubmit} />\n    </div> */}\n  </div>);\n}\n\nexport default Dialog;\n","import { sentMessage, } from \"../../../redux/dialogs-reducer.ts\";\nimport { connect } from \"react-redux\"\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\nimport React from \"react\";\nimport { compose } from \"redux\";\nimport Dialog from \"./Dialog\";\n\nclass DialogContainer extends React.Component {\n  render() {\n    return (\n      <Dialog {...this.props} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    // newMessageText: state.dialogsPage.newMessageText,\n  }\n}\n\nexport default compose(connect(mapStateToProps, { sentMessage}),\n  withAuthRedirect\n)(DialogContainer)\n\n\n// import DialogClass from \"./DialogClass\";\n// const DialogContainer = () => {\n//   return (\n//     <StoreContext.Consumer>\n//       {\n//         (store) => {\n//           let state = store.getState()\n//           let onChangeValue = (text) => {\n//             let action = updateNewMessageTextCreator(text)\n//             store.dispatch(action)\n//           }\n//           let onSendMessage = () => {\n//             store.dispatch(addMessageCreator())\n//           }\n//           return <Dialog\n//             dialogs={state.dialogsPage.dialogs}\n//             messages={state.dialogsPage.messages}\n//             newMessageText={state.dialogsPage.newMessageText}\n//             sendMessage={onSendMessage}\n//             onChangeValue={onChangeValue} />\n//         }\n//       }</StoreContext.Consumer>\n//   )\n// }\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","probs","path","id","className","style","to","name","message","props","dialogs","map","el","index","messages","join","styleMain","DialogContainer","this","React","compose","connect","dialogsPage","sentMessage","Component","RedirectComponent"],"sourceRoot":""}