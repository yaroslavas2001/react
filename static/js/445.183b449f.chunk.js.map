{"version":3,"file":"static/js/445.183b449f.chunk.js","mappings":"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","sources":["common/FormsControls/FormsControls.tsx","webpack://react/./src/component/pages/profile/MyPosts/Post/Post.module.css?03f6","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/use-composed-ref/dist/use-composed-ref.esm.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js","../node_modules/use-latest/dist/use-latest.esm.js","webpack://react/./src/common/DialogWindow/DialogWindow.module.css?ce94","common/DialogWindow/DialogWindow.tsx","component/pages/profile/MyPosts/Post/Post.tsx","webpack://react/./src/component/pages/profile/MyPosts/AddPostForm/AddPostForm.module.css?b73e","component/pages/profile/MyPosts/AddPostForm/AddPostForm.tsx","component/pages/profile/MyPosts/MyPosts.tsx","component/pages/profile/MyPosts/MyPostsContainer.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/ProfilePhoto/ProfilePhoto.module.css?c8c0","component/pages/profile/ProfileInfo/ProfilePhoto/ProfilePhoto.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/ProfileInfo.module.css?e98f","webpack://react/./src/common/LableBlock/LableBlock.module.css?eca0","common/LableBlock/LableBlock.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/status/ProfileStatusWithHook.module.css?f8cf","component/pages/profile/ProfileInfo/status/ProfileStatusWithHook.tsx","webpack://react/./src/common/Contact/Contact.module.css?27aa","common/Contact/Contact.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/contacts/ProfileContacts.module.css?2863","component/pages/profile/ProfileInfo/contacts/ProfileContactsForm.tsx","component/pages/profile/ProfileInfo/contacts/ProfileContacts.tsx","component/pages/profile/ProfileInfo/ProfileInfo.tsx","component/pages/profile/Profile.tsx","component/pages/profile/ProfileContainer.jsx","utils/validator/validators.ts","webpack://react/./src/common/FormsControls/FormsControls.module.css?9c32"],"sourcesContent":["import { Field } from \"redux-form\"\r\nimport style from \"./FormsControls.module.css\"\r\nimport React, { FC } from \"react\"\r\nimport { FielddValidatorType } from \"../../utils/validator/validators\"\r\nimport { join } from \"../../utils/function\"\r\ntype FormcontrolTYpe = {\r\n    children: React.ReactNode\r\n    meta: {\r\n        touched: boolean\r\n        error: string\r\n    }\r\n}\r\nconst Formcontrol: FC<FormcontrolTYpe> = (props) => {\r\n    const { meta: { touched, error }, children } = props\r\n    // деструктурезация {input,meta,...props}\r\n    // мы берем отдельно input,meta, а все оставшиеся штуки оставляем в пропсах\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={join([hasError ? style.error : \"\", style.form_Control])}>\r\n            {children}\r\n            {hasError && <span className={style.error_text}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    return (<Formcontrol {...props} >\r\n        <textarea {...props.input} {...props} />\r\n    </Formcontrol>)\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    return (<Formcontrol {...props} >\r\n        <input {...props.input} {...props} />\r\n    </Formcontrol>)\r\n}\r\n\r\nexport function createField<KeysType extends string>(placeholder: string, name: KeysType,\r\n    validators: Array<FielddValidatorType>,\r\n    component: string | React.Component | React.FC,\r\n    props = {}, text = \"\"): any {\r\n    return (<div className={style.row}>\r\n        <Field name={name} component={component}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            {...props}\r\n        />\r\n        {text}\r\n    </div>)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile_img\":\"Post_profile_img__T1fzg\",\"btn_indent\":\"Post_btn_indent__HLgm3\",\"textarea_block\":\"Post_textarea_block__oftv8\"};","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useLayoutEffect, forwardRef, useRef, createElement } from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\n\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  } // remove padding, since height = content\n\n\n  return height - sizingData.paddingSize;\n};\n\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tabindex', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles(hiddenTextarea);\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var paddingSize = sizingData.paddingSize,\n      borderSize = sizingData.borderSize,\n      sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData); // measure height of a textarea with a single row\n\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', // non-standard\n'tabSize', 'textIndent', // non-standard\n'textRendering', 'textTransform', 'width', 'wordBreak'];\nvar isIE = !!document.documentElement.currentStyle ;\n\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\n\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  var latestListener = useLatest(listener);\n  useLayoutEffect(function () {\n    var handler = function handler(event) {\n      latestListener.current(event);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      window.removeEventListener('resize', handler);\n    };\n  }, []);\n};\n\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n      maxRows = _ref.maxRows,\n      minRows = _ref.minRows,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHeightChange = _ref.onHeightChange,\n      onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"]);\n\n  if (process.env.NODE_ENV !== 'production' && props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n\n  var isControlled = props.value !== undefined;\n  var libRef = useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = useRef(0);\n  var measurementsCacheRef = useRef();\n\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);\n\n    if (!nodeSizingData) {\n      return;\n    }\n\n    measurementsCacheRef.current = nodeSizingData;\n\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n        height = _calculateNodeHeight[0],\n        rowHeight = _calculateNodeHeight[1];\n\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n\n    onChange(event);\n  };\n\n  {\n    useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n  }\n\n  return /*#__PURE__*/createElement(\"textarea\", _extends({}, props, {\n    onChange: handleChange,\n    ref: ref\n  }));\n};\n\nvar index = /* #__PURE__ */forwardRef(TextareaAutosize);\n\nexport default index;\n","import * as React from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = React.useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport { useLatest as default };\n","// extracted by mini-css-extract-plugin\nexport default {\"modal_window\":\"DialogWindow_modal_window__+juoU\",\"modal_window_block\":\"DialogWindow_modal_window_block__Btf2L\",\"modal_window_text\":\"DialogWindow_modal_window_text__lvJ2P\",\"btn_block\":\"DialogWindow_btn_block__30afB\",\"btn_indent\":\"DialogWindow_btn_indent__ATBGo\"};","import style from \"./DialogWindow.module.css\"\r\nimport styleMain from \"./../../App.module.css\"\r\nimport React, { FC } from \"react\"\r\nimport BaseButton from \"../Button/BaseButton\"\r\nimport { join } from \"../../utils/function\"\r\nimport ModalWindow from \"../ModalWindow/ModalWindow\"\r\nexport type DialogWindowType = {\r\n    text: string\r\n    agreementTextButton?: string\r\n    canselTextButton?: string\r\n    id?: number\r\n    isShow?:boolean\r\n    agreement: (id: number) => void\r\n    cansel: () => void\r\n}\r\nlet DialogWindow: FC<DialogWindowType> = ({ text, agreementTextButton = \"Ok\",isShow,\r\n    canselTextButton = \"Сancel\", id, agreement, cansel }) => {\r\n    return (\r\n        <ModalWindow isShow={isShow}>\r\n            <div className={style.modal_window}>\r\n                <div className={join([style.modal_window_block, styleMain.content])}>\r\n                    <div className={style.modal_window_text}>{text}</div>\r\n                    <div className={style.btn_block}>\r\n                        <BaseButton className={[style.btn_indent]} value={agreementTextButton} onClick={() => agreement(id)} />\r\n                        <BaseButton value={canselTextButton} onClick={cansel} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ModalWindow>\r\n    )\r\n}\r\nexport default DialogWindow","import style from \"./Post.module.css\"\nimport React, { useState } from \"react\"\nimport styleMain from \"./../../../../../App.module.css\"\nimport ReactTextareaAutosize from \"react-textarea-autosize\";\nimport { PostType } from \"../../../../../redux/profile-reducer\";\nimport { checkTextEmpty } from \"../../../../../utils/validator/validators\";\nimport BaseButton from \"../../../../../common/Button/BaseButton\";\nimport DialogWindow from \"../../../../../common/DialogWindow/DialogWindow\";\ntype propsType = {\n  post: PostType\n  deletePost: (id: number) => void\n  updatePost: (idPost: number, newText: string) => void\n}\nconst Post = (props: propsType) => {\n  let [editMode, setEditMode] = useState(false)\n  let [value, setTextPost] = useState(props.post.text)\n  let [error, setErrorText] = useState('')\n  let [showWindowDelete, setshowWindowDelete] = useState(false)\n\n  const updateText = () => () => {\n    setEditMode(true)\n  }\n  const save = () => () => {\n    if (checkTextEmpty(value) === undefined) {\n      props.updatePost(props.post.id, value)\n      setEditMode(false)\n      setErrorText(\"\")\n    }\n    else setErrorText(checkTextEmpty(value))\n  }\n  const cansel = () => () => {\n    setTextPost(props.post.text)\n    setEditMode(false)\n    setErrorText(\"\")\n  }\n  const deletePost = () => () => {\n    setshowWindowDelete(true)\n  }\n  const agreement = (id: number) => {\n    props.deletePost(id)\n    setshowWindowDelete(false)\n  }\n  const canselDalete = () => {\n    setshowWindowDelete(false)\n  }\n  return (<div className={styleMain.content}>\n    <div className={style.textarea_block}>\n      <ReactTextareaAutosize readOnly={!editMode} value={value}\n        onChange={ev => setTextPost(ev.target.value)}\n      />\n    </div>\n\n    <div>{error}</div>\n    {!editMode && <>\n      <BaseButton isSmall onClick={updateText()} value=\"Edit\" className={[style.btn_indent]} />\n      <BaseButton isSmall onClick={deletePost()} value=\"Delete\" />    </>}\n    {editMode && <>\n      <BaseButton isSmall value=\"Save\" onClick={save()} className={[style.btn_indent]} />\n      <BaseButton isSmall isMutedStyle={true} value=\"Cansel\" onClick={cansel()} />    </>}\n    {/* {showWindowDelete &&  */}\n    <DialogWindow id={props.post.id}\n      isShow={showWindowDelete}\n      text=\"Are you sure you want to delete the post?\"\n      agreement={agreement} cansel={canselDalete} />\n    \n  </div>);\n}\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"AddPostForm_block__Dqktn\",\"photo_user\":\"AddPostForm_photo_user__z5LE4\",\"btn\":\"AddPostForm_btn__3Lnfl\"};","import React, { FC, useState, useEffect } from \"react\";\nimport styleMain from \"./../../../../../App.module.css\"\nimport style from \"./AddPostForm.module.css\"\nimport { join } from \"../../../../../utils/function\";\nimport { ProfileType } from \"../../../../../api/api\";\nimport defaultPhoto from \"./../../../../../assets/default_user.png\"\n\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { checkTextEmpty } from \"../../../../../utils/validator/validators\";\nimport BaseButton from \"../../../../../common/Button/BaseButton\";\n\ntype AddPostFormType = {\n  profile: ProfileType\n  onSubmit: (value: any) => void\n}\nexport type AddPostFormFieldType = {\n  newPostText: string\n}\nconst AddPostForm: FC<AddPostFormType> = ({ profile, onSubmit }) => {\n  const photo = profile?.photos?.large ? profile.photos.large : defaultPhoto\n  let [value, setTextPost] = useState('')\n  let [error, setErrorText] = useState('')\n\n  const sentPostText = () => {\n    if (checkTextEmpty(value) === undefined) {\n      onSubmit(value)\n      setTextPost(\"\")\n      setErrorText(\"\")\n    }\n    else setErrorText(checkTextEmpty(value))\n\n  }\n  useEffect(() => {\n    if (value.length === 0)\n      setTextPost(\"\")\n  }, [value])\n\n  return (\n    <form className={join([styleMain.content, style.block])}>\n      <img src={photo} alt=\"photo user\" className={style.photo_user} />\n      <TextareaAutosize value={value}\n        onChange={ev => setTextPost(ev.target.value)}\n        placeholder=\"Anything new?\"\n        className={style.test}\n      />\n      <div>{error}</div>\n      <BaseButton value=\"Add post\" onClick={sentPostText} className={[style.btn]} />\n    </form>\n  )\n}\n\nexport default AddPostForm;\n","import React from \"react\";\nimport Post from \"./Post/Post\"\nimport style from \"./MyPosts.module.css\"\nimport ReduxAddPostForm, { AddPostFormFieldType } from \"./AddPostForm/AddPostForm\";\nimport { PostType } from \"../../../../redux/profile-reducer\";\nimport { ProfileType } from \"../../../../api/api\";\ntype MapStateToPropsType = {\n  newPostText: string\n  posts: Array<PostType>\n  profile: ProfileType\n}\ntype MapDispatchToPropsType = {\n  addPost: (newPostText: string) => void\n  deletePost: (id: number) => void\n  updatePost: (idPost: number, newText: string) => void\n}\ntype propsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst MyPosts = (props: propsType) => {\n\n  let postsElements = props.posts.map((el: PostType, index: number) =>\n    <Post key={el.id} post={el} deletePost={props.deletePost} updatePost={props.updatePost} />)\n\n  const onSubmit = (value: string) => {\n    props.addPost(value)\n  }\n\n  return (< >\n    <ReduxAddPostForm onSubmit={onSubmit} profile={props.profile} />\n    {postsElements}\n  </>);\n}\n\nexport default MyPosts;\n","import { addPost, PostType ,deletePost,updatePost} from \"../../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\"\nimport { AppReducerType } from \"../../../../redux/redux-store\";\nimport { ProfileType } from \"../../../../api/api\";\n\ntype MapStateToPropsType = {\n  newPostText: string\n  posts: Array<PostType>\n  profile: ProfileType\n}\ntype MapDispatchToPropsType = {\n  addPost: (newPostText: string) => void\n  deletePost:(postId:number)=>void\n  updatePost: (idPost: number, newText: string) => void\n}\nlet mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\n  return {\n    newPostText: state.profilePage.newPostText,\n    posts: state.profilePage.posts,\n    profile: state.profilePage.profile\n  }\n}\nexport default connect<MapStateToPropsType, MapDispatchToPropsType>(mapStateToProps, { addPost ,deletePost,updatePost})(MyPosts)\n","// extracted by mini-css-extract-plugin\nexport default {\"photo_block\":\"ProfilePhoto_photo_block__sD1Eo\",\"photo\":\"ProfilePhoto_photo__4EtfM\",\"islookingForAJob\":\"ProfilePhoto_islookingForAJob__fQETr\",\"input_new_photo\":\"ProfilePhoto_input_new_photo__ySUyd\"};","import style from \"./ProfilePhoto.module.css\"\r\nimport photo from \"./../../../../../assets/avatar.png\"\r\nimport React, { FC } from \"react\"\r\nimport LoadPhoto from \"./../../../../../assets/load-photo.png\"\r\n\r\ntype propsType = {\r\n    photo: string\r\n    lookingForAJob: boolean\r\n    isAutorizedUserId: boolean\r\n    setProfilePhoto: (photo: FormData) => void\r\n}\r\nconst ProfilePhoto: FC<propsType> = (props: propsType) => {\r\n    let userPhoto = props.photo ? props.photo : photo\r\n    const test = (e: any) => {\r\n        // условие что это активный пользователь\r\n        let formData = new FormData()\r\n        let file = e.target.files[0]\r\n        formData.append(\"image\", file, file.name)\r\n        props.setProfilePhoto(formData)\r\n    }\r\n    return (<>\r\n        <div className={style.photo_block} >\r\n            <img src={userPhoto} alt=\"profile_photo\" className={style.photo} />\r\n            {props.isAutorizedUserId ?\r\n                <label className={style.input_new_photo} title=\"Change a photo\">\r\n                    <img src={LoadPhoto} alt=\"Load Photo\" />\r\n                    <input type=\"file\" onChange={test} />\r\n                </label>\r\n                : ''}\r\n            {props.lookingForAJob ? <div className={style.islookingForAJob}>Open to work</div> : null}\r\n        </div>\r\n    </>\r\n\r\n    )\r\n}\r\nexport default ProfilePhoto","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ProfileInfo_content__O32wq\",\"info\":\"ProfileInfo_info__0M3Sh\"};","// extracted by mini-css-extract-plugin\nexport default {\"label_block\":\"LableBlock_label_block__vFJSs\",\"label\":\"LableBlock_label__ctb9J\",\"label_bold\":\"LableBlock_label_bold__B9R0x\"};","import style from \"./LableBlock.module.css\"\r\nimport React, { FC, useEffect } from \"react\"\r\nexport type LableBlockType = {\r\n    children: JSX.Element | string\r\n    name: string\r\n    isBold?: boolean\r\n    margin?: number\r\n}\r\nlet LableBlock: FC<LableBlockType> = ({ children, name, margin = 0, isBold = false }) => {\r\n    let styleBlock = {\r\n        margin: margin + \"px 0px\"\r\n    }\r\n    return (<div className={style.label_block} style={styleBlock}>\r\n        <label className={isBold ? style.label_bold : style.label}>{name}</label>\r\n        <div className={style.block}>\r\n            {children}\r\n        </div>\r\n    </div>)\r\n}\r\nexport default LableBlock","// extracted by mini-css-extract-plugin\nexport default {\"set_status\":\"ProfileStatusWithHook_set_status__TwvhI\"};","import React, { FC, useEffect, useState } from \"react\";\r\nimport LableBlock from \"../../../../../common/LableBlock/LableBlock\";\r\nimport style from \"./ProfileStatusWithHook.module.css\"\r\n\r\ntype propstype = {\r\n  status: string\r\n  isAuth: boolean\r\n  isAutorizedUserId: boolean\r\n  updateStatus: (status: string) => void\r\n}\r\nconst ProfileStatusWithHook: FC<propstype> = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  useEffect(() => {\r\n    // выполняется после отрисовки\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n  const activateEditMode = () => {\r\n    if (props.isAuth && props.isAutorizedUserId)\r\n      setEditMode(true)\r\n  }\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false)\r\n\r\n    props.updateStatus(status)\r\n  }\r\n  const changeStatus = (e: any) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  let getStatus = (status: string) => {\r\n    if (status) return status\r\n    else if (!status && !props.isAutorizedUserId) return \"The user has not entered a status\"\r\n    else return \"Enter status\"\r\n  }\r\n  return (<div>\r\n    <LableBlock name=\"Status:\" isBold margin={6}>\r\n      {editMode ?\r\n        <input autoFocus={true} onChange={changeStatus}\r\n          value={status}\r\n          onBlur={deActivateEditMode} type=\"text\" />\r\n        :\r\n        <div title={props.isAutorizedUserId ? \"Double click\" : null} className={props.isAutorizedUserId ? style.set_status : ''}\r\n          onDoubleClick={activateEditMode}>{getStatus(status)}\r\n        </div>\r\n      }\r\n    </LableBlock>\r\n  </div>)\r\n}\r\n\r\nexport default ProfileStatusWithHook\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__qlN1d\",\"link\":\"Contact_link__fhpt-\"};","import style from \"./Contact.module.css\"\r\nimport React, { FC } from \"react\"\r\nexport type ContactType = {\r\n    link: string\r\n    linkName: string\r\n}\r\nlet Contact: FC<ContactType> = ({ link, linkName }) => {\r\n    return (<>\r\n        {link ?\r\n            <div className={style.contact}>\r\n                <a href={link}\r\n                    rel=\"noreferrer\" target=\"_blank\"\r\n                    title={link} className={style.link}>\r\n                    {linkName}</a>\r\n            </div>\r\n            : null}\r\n    </>)\r\n}\r\nexport default Contact","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"ProfileContacts_name__0SKuC\",\"contact_block\":\"ProfileContacts_contact_block__tLk8+\",\"contacts\":\"ProfileContacts_contacts__aMSuh\",\"set_status\":\"ProfileContacts_set_status__5hAF1\",\"lookingForAJobDescription\":\"ProfileContacts_lookingForAJobDescription__FmNal\"};","import { reduxForm } from \"redux-form\"\r\nimport React, { FC, FormEvent } from \"react\"\r\nimport { createField, Input, Textarea } from \"../../../../../common/FormsControls/FormsControls\"\r\nimport { maxLenghtCreator, required } from \"../../../../../utils/validator/validators\"\r\nimport BaseButton from \"../../../../../common/Button/BaseButton\"\r\nimport styleFormsControl from \"./../../../../../common/FormsControls/FormsControls.module.css\"\r\nimport LableBlock from \"../../../../../common/LableBlock/LableBlock\"\r\nimport { ProfileType } from \"../../../../../api/api\"\r\nconst maxLenght100 = maxLenghtCreator(100)\r\ntype LoginFormPropsType = {\r\n  handleSubmit?: () => void\r\n  _error?: any\r\n\r\n}\r\ntype ErrorType = {\r\n  _error: any\r\n}\r\nconst ProfileContactsForm: FC<LoginFormPropsType> = ({ handleSubmit, _error }) => {\r\n  // console.log(\"error\", _error)\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <LableBlock name=\"About Me\">\r\n        {createField(\"About Me\", 'aboutMe', [required, maxLenght100], Input)}\r\n      </LableBlock>\r\n      <LableBlock name=\"FullName\">\r\n        {createField(\"FullName\", 'fullName', [required, maxLenght100], Input)}\r\n      </LableBlock>\r\n      {createField(null, 'lookingForAJob', [],\r\n        'input', { type: \"checkbox\" }, \"lookingForAJob\")}\r\n      {createField(\"LookingForAJobDescription\", 'lookingForAJobDescription', [maxLenght100], Textarea)}\r\n\r\n      <LableBlock name=\"Facebook\">\r\n        {createField(\"facebook\", 'contacts.facebook', [maxLenght100], Input)}\r\n      </LableBlock>\r\n      <LableBlock name=\"Github\">\r\n        {createField(\"github\", 'contacts.github', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"VK\">\r\n        {createField(\"VK\", 'contacts.vk', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Instagram\">\r\n        {createField(\"Instagram\", 'contacts.instagram', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Twitter\">\r\n        {createField(\"Twitter\", 'contacts.twitter', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Website\">\r\n        {createField(\"Website\", 'contacts.website', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"MainLink\">\r\n        {createField(\"MainLink\", 'contacts.mainLink', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Youtube\">\r\n        {createField(\"Youtube\", 'contacts.youtube', [maxLenght100], Input)}\r\n      </LableBlock>\r\n      {/* {createField(\"Skype\", 'contacts.skype', [maxLenght100], Input)} */}\r\n      {/* {createField(\"Icq\", 'contacts.icq', [maxLenght100], Input)} */}\r\n      {/* {createField(\"Email\", 'contacts.email', [maxLenght100], Input)} */}\r\n      {/* {createField(\"GooglePlus\", 'contacts.googlePlus', [maxLenght100], Input)} */}\r\n      {/* {createField(\"WhatsApp\", 'contacts.whatsApp', [maxLenght100], Input)} */}\r\n      {_error && <div className={styleFormsControl.formSummaryError}>\r\n        {_error}\r\n      </div>}\r\n      <BaseButton onClick={() => { }} value=\"Save\" />\r\n      {/* <button>Save</button> */}\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxProfileContactsForm = reduxForm<ProfileType, LoginFormPropsType, ErrorType>({\r\n  form: 'contact',\r\n})(ProfileContactsForm)\r\n\r\nexport default ReduxProfileContactsForm","import Contact, { ContactType } from \"../../../../../common/Contact/Contact\";\r\nimport Preloader from \"../../../../../common/Preloader/Preloader\";\r\nimport style from \"./ProfileContacts.module.css\"\r\nimport React, { FC, useState } from \"react\"\r\nimport { ProfileContactsType, ProfileType } from \"../../../../../api/api\";\r\nimport ReduxProfileContactsForm, { } from \"./ProfileContactsForm\";\r\nimport BaseButton from \"../../../../../common/Button/BaseButton\";\r\nimport LableBlock from \"../../../../../common/LableBlock/LableBlock\";\r\ntype propsType = {\r\n  profile: ProfileType\r\n  isAuth: boolean\r\n  isAutorizedUserId: boolean\r\n  setProfileDetail: (aboutMe: ProfileType) => void\r\n}\r\nconst ProfileContacts: FC<propsType> = ({ profile, isAuth, isAutorizedUserId, setProfileDetail }) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n  if (!profile) {\r\n    return <Preloader isFetching={!profile} />\r\n  }\r\n\r\n  const contacts: ProfileContactsType = profile.contacts\r\n  let contactArray: Array<ContactType> = [\r\n    { link: contacts.github, linkName: 'Github' },\r\n    { link: contacts.vk, linkName: 'VK' },\r\n    { link: contacts.facebook, linkName: 'Facebook' },\r\n    { link: contacts.instagram, linkName: 'Instagram' },\r\n    { link: contacts.twitter, linkName: 'Twitter' },\r\n    { link: contacts.website, linkName: 'Website' },\r\n    { link: contacts.mainLink, linkName: 'MainLink' },\r\n    { link: contacts.youtube, linkName: 'Youtube' },\r\n    // { link: contacts.skype, linkName: 'Skype' },\r\n    // { link: contacts.icq, linkName: 'Icq' },\r\n    // { link: contacts.googlePlus, linkName: 'GooglePlus' },\r\n    // { link: contacts.whatsApp, linkName: 'WhatsApp' },\r\n    // { link: contacts.email, linkName: 'Email' },\r\n  ]\r\n\r\n  const onSubmit = (data: ProfileType) => {\r\n    setProfileDetail(data)\r\n    setEditMode(false)\r\n  }\r\n  const editData = () => () => {\r\n    setEditMode(true)\r\n  }\r\n  const contactElement = contactArray.map((el, index) => <Contact key={el.linkName} link={el.link} linkName={el.linkName} />)\r\n  let isNotEmptyContact = contactArray.some((el) => el.link != null)\r\n  return (\r\n    <>\r\n      {editMode ? <ReduxProfileContactsForm initialValues={profile} onSubmit={onSubmit} /> :\r\n        <div>\r\n          <h1 className={style.name}> {profile.fullName} </h1>\r\n          <LableBlock name=\"About Me:\" isBold margin={6} >\r\n            {profile?.aboutMe != null ? profile.aboutMe : \"No information \"}\r\n          </LableBlock>\r\n          <LableBlock name=\"Contacts:\" isBold margin={6} >\r\n            <>{isNotEmptyContact ? contactElement : <span>Contacts are empty</span>}   </>\r\n          </LableBlock>\r\n          {profile.lookingForAJob ? (\r\n            <LableBlock name=\"Description:\" isBold margin={6}>\r\n              {profile.lookingForAJobDescription}\r\n            </LableBlock>\r\n          ) : null}\r\n        </div>\r\n      }\r\n      {isAutorizedUserId && !editMode ?\r\n        <BaseButton value=\"Edit information\" onClick={editData()} />\r\n        : ''}\r\n    </>);\r\n}\r\n\r\nexport default ProfileContacts;\r\n","import Preloader from \"../../../../common/Preloader/Preloader\";\r\nimport ProfilePhoto from \"./ProfilePhoto/ProfilePhoto\";\r\nimport style from \"./ProfileInfo.module.css\"\r\nimport ProfileStatusWithHook from \"./status/ProfileStatusWithHook\";\r\nimport React, { FC } from \"react\"\r\nimport {  ProfileType } from \"../../../../api/api\";\r\nimport styleMain from \"./../../../../App.module.css\"\r\nimport { join } from \"../../../../utils/function\";\r\nimport ProfileContacts from \"./contacts/ProfileContacts\";\r\ntype propsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  isAuth: boolean\r\n  isAutorizedUserId: boolean\r\n  updateStatus: (status: string) => void\r\n  setProfilePhoto: (photo: FormData) => void\r\n  setProfileDetail: (aboutMe: ProfileType) => void\r\n}\r\nconst ProfileInfo: FC<propsType> = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader isFetching={!props.profile} />\r\n  }\r\n  return (\r\n    <div className={join([style.content, styleMain.content])}>\r\n      <ProfilePhoto photo={props.profile.photos.large}\r\n        setProfilePhoto={props.setProfilePhoto}\r\n        lookingForAJob={props.profile.lookingForAJob}\r\n        isAutorizedUserId={props.isAutorizedUserId} />\r\n      <div className={style.info}>\r\n        \r\n        <ProfileContacts\r\n          profile={props.profile}\r\n          isAuth={props.isAuth}\r\n          setProfileDetail={props.setProfileDetail}\r\n          isAutorizedUserId={props.isAutorizedUserId}\r\n        />\r\n        <ProfileStatusWithHook status={props.status}\r\n          isAuth={props.isAuth}\r\n          isAutorizedUserId={props.isAutorizedUserId}\r\n          updateStatus={props.updateStatus} />\r\n      </div>\r\n    </div>);\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport React from \"react\"\r\nimport { ProfileType } from \"../../../api/api\";\r\ntype propsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  autorizedUserId: number\r\n  profileId: number\r\n  isAuth: boolean\r\n  updateStatus: (status: string) => void\r\n  setProfilePhoto: (photo: FormData) => void\r\n  setProfileDetail: (aboutMe: ProfileType) => void\r\n}\r\nconst Profile = (props: propsType) => {\r\n  const isAutorizedUserId = props.autorizedUserId === props.profile?.userId\r\n  // const array = [1, 25, 55, 77, -5, 108]\r\n  // console.log(\"sort array\", array.sort((a, b) => {\r\n  //   if (a > b) return 1\r\n  //   else return -1\r\n  // }))\r\n\r\n  // let myMapFunction = (array: Array<any>, callBack: Function) => {\r\n  //   const result = []\r\n  //   for (let i = 0; i < array.length; i++) {\r\n  //     const element = array[i];\r\n  //     result.push(callBack(element))\r\n  //   }\r\n  //   return result\r\n  // }\r\n  // console.log(\"myMapFunction\",myMapFunction(array,(a:number)=>{return a+1}))\r\n  // полиндром\r\n  // const test = \"ava\"\r\n  // const test1 = \"awra\"\r\n  // const Polindrom = (str: string) => {\r\n  //   let string = str.toLowerCase()\r\n  //   return string === string.split(\"\").reverse().join(\"\")\r\n  // }\r\n  // console.log(Polindrom(test))\r\n  // console.log(Polindrom(test1))\r\n\r\n  return (<>\r\n    <ProfileInfo profile={props.profile}\r\n      status={props.status}\r\n      updateStatus={props.updateStatus}\r\n      isAuth={props.isAuth}\r\n      setProfilePhoto={props.setProfilePhoto}\r\n      setProfileDetail={props.setProfileDetail}\r\n      isAutorizedUserId={isAutorizedUserId}\r\n    />\r\n    {isAutorizedUserId &&\r\n      <MyPostsContainer />\r\n    }\r\n\r\n  </>);\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setProfile, getStatus, updateStatus, setProfilePhoto ,setProfileDetail} from \"../../../redux/profile-reducer\"\nimport Profile from \"./Profile\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"../../../hoc/withRouter\"\nimport { Navigate } from \"react-router-dom\";\n// type MapStateToPropsType = {\n//   profile: ProfileType\n//   status: string\n//   autorizedUserId: number\n//   isAuth: boolean\n// }\n// type MapDispatchToPropsType = {\n//   setProfile: (id: number) => void\n//   getStatus: (id: number) => void\n//   updateStatus: (status: string) => void\n// }\n// type propsType = MapStateToPropsType & MapDispatchToPropsType\nclass ProfileContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.profileId = this.props.router.params.profileId ? this.props.router.params.profileId : this.props.autorizedUserId\n  }\n  refreshProfile() {\n    let profileId = this.props.router.params.profileId ? this.props.router.params.profileId : this.props.autorizedUserId\n    // if (!profileId) {\n    // profileId = 26414\n    // this.props.navigation(\"/login\", {})\n\n\n    // console.log(\"router\",this.props.router)\n    // navigation нужно использовать в useEffect\n    // не сработает, потому что редиректы не тут нужно сделать\n    // this.props.router.navigate(\"/login\"); \n    // не сработает потому что history - undefined \n    // this.props.history.push('/login')\n    // }\n    if (profileId) {\n      this.props.setProfile(profileId)\n      this.props.getStatus(profileId)\n    }\n\n\n  }\n\n  componentDidMount() {\n    this.refreshProfile()\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.router.params.profileId !== prevProps.router.params.profileId)\n      this.refreshProfile()\n  }\n  render() {\n    if (!this.profileId) return <Navigate to=\"/login\" />;\n    return (<Profile {...this.props} />)\n  }\n}\n// AppReducerType\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    autorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  }\n}\n\n// function withRouter(Component) {\n//   function ComponentWithRouterProp(props) {\n//     let location = useLocation();\n//     let navigate = useNavigate();\n//     let params = useParams();\n//     return (\n//       <Component\n//         {...props}\n//         router={{ location, navigate, params }}\n//       />\n//     );\n//   }\n//   return ComponentWithRouterProp;\n// }\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { setProfile, getStatus, updateStatus, setProfilePhoto ,setProfileDetail}),\n\n  // withAuthRedirect\n)(ProfileContainer)","export type FielddValidatorType = (value: string) => string | undefined | boolean\r\n\r\nexport const required: FielddValidatorType = (value) => {\r\n    if (value) return undefined\r\n    return \"Field is Required \"\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght: number): FielddValidatorType => (value) => {\r\n    if (value && value.length > maxLenght) return `Max lenght is ${maxLenght} symbols`\r\n    return undefined\r\n}\r\n\r\nexport const checkTextEmpty = (value: string): string  => {\r\n    const textWithoutLetters = value.replace(/[\\n\\r]/g, '')\r\n    if (textWithoutLetters.length === 0 && value.length > 0)\r\n        return \"Don't post empty space\"\r\n    if (textWithoutLetters.length === 0 && value.length === 0)\r\n        return \"Don't post empty post\"\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormsControls_error__EWpbC\",\"error_text\":\"FormsControls_error_text__dGRiv\",\"formSummaryError\":\"FormsControls_formSummaryError__FxFd0\",\"row\":\"FormsControls_row__M-VpV\",\"form_Control\":\"FormsControls_form_Control__VKxi3\"};"],"names":["Formcontrol","props","meta","touched","error","children","hasError","className","join","style","Textarea","input","Input","createField","placeholder","name","validators","component","text","validate","useLayoutEffect","updateRef","ref","value","current","libRef","userRef","prevUserRef","useRef","useCallback","instance","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","forceHiddenStyles","node","Object","keys","forEach","key","setProperty","hiddenTextarea","noop","SIZING_STYLE","isIE","document","documentElement","currentStyle","useWindowResizeListener","listener","latestListener","React","useIsomorphicLayoutEffect","useLatest","handler","event","window","addEventListener","removeEventListener","TextareaAutosize","_ref","cacheMeasurements","maxRows","minRows","_ref$onChange","onChange","_ref$onHeightChange","onHeightChange","_objectWithoutPropertiesLoose","isControlled","undefined","useComposedRef","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","getComputedStyle","obj","sizingStyle","reduce","acc","prop","boxSizing","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingSize","paddingBottom","paddingTop","borderSize","borderBottomWidth","borderTopWidth","getSizingData","_calculateNodeHeight","sizingData","Infinity","createElement","setAttribute","parentNode","body","appendChild","_key","scrollHeight","getHeight","rowHeight","minHeight","Math","max","maxHeight","min","calculateNodeHeight","_extends","forwardRef","agreementTextButton","isShow","canselTextButton","id","agreement","cansel","ModalWindow","styleMain","BaseButton","onClick","useState","editMode","setEditMode","post","setTextPost","setErrorText","showWindowDelete","setshowWindowDelete","readOnly","ev","target","isSmall","checkTextEmpty","updatePost","isMutedStyle","deletePost","profile","onSubmit","photo","photos","large","defaultPhoto","useEffect","length","src","alt","postsElements","posts","map","el","index","addPost","connect","state","newPostText","profilePage","MyPosts","userPhoto","isAutorizedUserId","title","type","e","formData","FormData","file","files","append","setProfilePhoto","lookingForAJob","margin","isBold","styleBlock","status","setStatus","autoFocus","currentTarget","onBlur","updateStatus","onDoubleClick","isAuth","getStatus","link","linkName","href","rel","maxLenght100","maxLenghtCreator","reduxForm","form","handleSubmit","_error","required","styleFormsControl","setProfileDetail","Preloader","isFetching","contacts","contactArray","github","vk","facebook","instagram","twitter","website","mainLink","youtube","contactElement","isNotEmptyContact","some","initialValues","data","fullName","aboutMe","lookingForAJobDescription","autorizedUserId","userId","MyPostsContainer","ProfileContainer","profileId","router","params","this","setProfile","refreshProfile","prevProps","to","compose","withRouter","auth","maxLenght","textWithoutLetters","replace"],"sourceRoot":""}