{"version":3,"file":"static/js/640.7bdeca76.chunk.js","mappings":"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","sources":["common/FormsControls/FormsControls.js","component/pages/login/Login.jsx","component/pages/login/LoginContainer.jsx","utils/validator/validators.js","webpack://react/./src/common/FormsControls/FormsControls.module.css?9c32"],"sourcesContent":["import { Field } from \"redux-form\"\r\nimport style from \"./FormsControls.module.css\"\r\n\r\nconst Formcontrol = (props) => {\r\n    const { meta: { touched, error }, children } = props\r\n    // деструктурезация {input,meta,...props}\r\n    // мы берем отдельно input,meta, а все оставшиеся штуки оставляем в пропсах\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={hasError ? style.error : \"\"}>\r\n            {children}\r\n            {hasError && <span className={style.error_text}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return (<Formcontrol {...props} >\r\n        <textarea {...props.input} {...props} />\r\n    </Formcontrol>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    return (<Formcontrol {...props} >\r\n        <input {...props.input} {...props} />\r\n    </Formcontrol>)\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => {\r\n    return <div>\r\n        <Field name={name} component={component}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            {...props}\r\n        />\r\n        {text}\r\n    </div>\r\n}","import { Navigate } from \"react-router-dom\"\r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport { createField, Input } from \"../../../common/FormsControls/FormsControls\"\r\nimport Preloader from \"../../../common/Preloader/Preloader\"\r\nimport { maxLenghtCreator, required } from \"../../../utils/validator/validators\"\r\nimport style from \"./../../../common/FormsControls/FormsControls.module.css\"\r\nconst maxLenght50 = maxLenghtCreator(50)\r\nconst maxLenght10 = maxLenghtCreator(10)\r\n\r\nconst LoginForm = ({ handleSubmit, error, isShowCapcha }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Login\", 'email', [required, maxLenght50], Input)}\r\n            {/* <Field name={'email'} component={Input}\r\n                    placeholder=\"Login\"\r\n                    validate={[required, maxLenght50]}\r\n                /> */}\r\n            {createField(\"Password\", 'password', [required, maxLenght50],\r\n                Input, { type: \"password\" })}\r\n\r\n            {createField(null, 'rememberMe', [],\r\n                'input', { type: \"checkbox\" },\"Remember me\")}      \r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button disabled={isShowCapcha}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst CaptchaForm = ({ handleSubmit, capchaUrl }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <img src={capchaUrl} alt=\"capchaUrl\" />\r\n            <div>\r\n                <Field name={'captcha'} component={Input}\r\n                    placeholder=\"captcha\"\r\n                    validate={[required, maxLenght10]}\r\n                />\r\n            </div>\r\n            <button>Отправить капчу</button>\r\n        </form>\r\n    )\r\n}\r\nconst ReduxLoginForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\nconst ReduxCaptchaForm = reduxForm({\r\n    form: 'CaptchaForm'\r\n})(CaptchaForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.logintMe(formData.email, formData.password,\r\n            formData.rememberMe, true\r\n        )\r\n    }\r\n    const onSubmitCaptha = (formData) => {\r\n        if (formData.captcha.length > 4) props.finishСheckingCapcha()\r\n    }\r\n    if (props.isAuth) {\r\n        return <Navigate to=\"/profile\" />\r\n    }\r\n    return (<div>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm {...props} onSubmit={onSubmit} />\r\n        <div>\r\n            {props.isShowCapcha ?\r\n\r\n                <div>\r\n                    Капча\r\n\r\n                    <Preloader isFetching={props.isWaitingCapcha} />\r\n                    {!props.isWaitingCapcha ?\r\n                        <ReduxCaptchaForm {...props} onSubmit={onSubmitCaptha} />\r\n                        : null}\r\n                </div> : null}\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Login","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport { logintMe ,getCapchaUrl,finishСheckingCapcha} from \"./../../../redux/auth-reducer\"\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\"\r\n\r\nclass LoinContainer extends React.Component {\r\n    componentDidMount(){\r\n        this.props.getCapchaUrl()\r\n    }\r\n    render() {\r\n        return (<Login {...this.props} />)\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        capchaUrl:state.auth.capchaUrl,\r\n        isWaitingCapcha:state.auth.isWaitingCapcha,\r\n        isShowCapcha:state.auth.isShowCapcha\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { logintMe,getCapchaUrl,finishСheckingCapcha }),\r\n)(LoinContainer)","export const required = (value) => {\r\n    if (value) return undefined\r\n    return \"Field is Required \"\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => value => {\r\n    if (value && value.length > maxLenght) return `Max lenght is ${maxLenght} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormsControls_error__EWpbC\",\"error_text\":\"FormsControls_error_text__dGRiv\",\"formSummaryError\":\"FormsControls_formSummaryError__FxFd0\"};"],"names":["Formcontrol","props","meta","touched","error","children","hasError","className","style","Textarea","input","Input","createField","placeholder","name","validators","component","text","validate","maxLenght50","maxLenghtCreator","maxLenght10","ReduxLoginForm","reduxForm","form","handleSubmit","isShowCapcha","onSubmit","required","type","disabled","ReduxCaptchaForm","capchaUrl","src","alt","Field","isAuth","to","formData","logintMe","email","password","rememberMe","Preloader","isFetching","isWaitingCapcha","captcha","length","finishСheckingCapcha","LoinContainer","this","getCapchaUrl","React","compose","connect","state","auth","value","maxLenght"],"sourceRoot":""}